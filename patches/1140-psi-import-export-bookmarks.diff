--- a/src/bookmarkmanage.ui
+++ b/src/bookmarkmanage.ui
@@ -125,13 +125,50 @@
      </property>
     </widget>
    </item>
-   <item row="2" column="0" colspan="2">
+   <item row="2" column="1">
     <widget class="QDialogButtonBox" name="buttonBox">
      <property name="standardButtons">
       <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
      </property>
     </widget>
    </item>
+   <item row="2" column="0">
+    <layout class="QHBoxLayout" name="importLayout">
+     <item>
+      <widget class="QPushButton" name="pb_import">
+       <property name="toolTip">
+        <string>Import bookmarks from file</string>
+       </property>
+       <property name="text">
+        <string>&amp;Import</string>
+       </property>
+      </widget>
+     </item>
+     <item>
+      <widget class="QPushButton" name="pb_export">
+       <property name="toolTip">
+        <string>Export bookmarks to file</string>
+       </property>
+       <property name="text">
+        <string>&amp;Export</string>
+       </property>
+      </widget>
+     </item>
+     <item>
+      <spacer name="horizontalSpacer">
+       <property name="orientation">
+        <enum>Qt::Horizontal</enum>
+       </property>
+       <property name="sizeHint" stdset="0">
+        <size>
+         <width>40</width>
+         <height>20</height>
+        </size>
+       </property>
+      </spacer>
+     </item>
+    </layout>
+   </item>
   </layout>
  </widget>
  <resources/>
--- a/src/bookmarkmanagedlg.cpp
+++ b/src/bookmarkmanagedlg.cpp
@@ -23,10 +23,13 @@
 #include <QStandardItemModel>
 #include <QPushButton>
 #include <QAction>
+#include <QFile>
+#include <QMessageBox>
 
 #include "bookmarkmanager.h"
 #include "psiaccount.h"
 #include "iconset.h"
+#include "fileutil.h"
 
 BookmarkManageDlg::BookmarkManageDlg(PsiAccount* account)
 	: QDialog()
@@ -47,6 +50,11 @@ BookmarkManageDlg::BookmarkManageDlg(PsiAccount* account)
 
 	ui_.autoJoin->addItems(ConferenceBookmark::joinTypeNames());
 
+	ui_.pb_import->setIcon(IconsetFactory::icon("psi/cm_import").icon());
+	ui_.pb_export->setIcon(IconsetFactory::icon("psi/cm_export").icon());
+	connect(ui_.pb_import, SIGNAL(clicked()), SLOT(importBookmarks()));
+	connect(ui_.pb_export, SIGNAL(clicked()), SLOT(exportBookmarks()));
+
 	addButton_    = ui_.bookmarkButtonBox->addButton(tr("&Add"),    QDialogButtonBox::ActionRole);
 	removeButton_ = ui_.bookmarkButtonBox->addButton(tr("&Remove"), QDialogButtonBox::DestructiveRole);
 	joinButton_   = ui_.bookmarkButtonBox->addButton(tr("&Join"),   QDialogButtonBox::ActionRole);
@@ -221,3 +229,57 @@ void BookmarkManageDlg::appendItem(QStandardItem* item)
 	item->setDropEnabled(false);
 	model_->invisibleRootItem()->appendRow(item);
 }
+
+void BookmarkManageDlg::importBookmarks()
+{
+	QString fileName = FileUtil::getOpenFileName(this, tr("Import bookmarks"));
+	if(fileName.isEmpty())
+		return;
+
+	QFile file(fileName);
+	if(file.open(QIODevice::ReadOnly | QIODevice::Text)) {
+		QDomDocument doc;
+		QString error;
+		if(doc.setContent(&file, &error)) {
+			QDomElement root = doc.firstChildElement("bookmarks");
+			if(root.isNull())
+				return;
+			QDomElement elem = root.firstChildElement("conference");
+			while(!elem.isNull()) {
+				ConferenceBookmark c(elem);
+
+				QStandardItem* item = new QStandardItem(c.name());
+				item->setData(QVariant(c.jid().full()), JidRole);
+				item->setData(QVariant(c.autoJoin()),   AutoJoinRole);
+				item->setData(QVariant(c.nick()),       NickRole);
+				item->setData(QVariant(c.password()),   PasswordRole);
+				appendItem(item);
+
+				elem = elem.nextSiblingElement("conference");
+			}
+		}
+		else {
+			QMessageBox::warning(this, tr("Error!"), error);
+		}
+	}
+}
+
+void BookmarkManageDlg::exportBookmarks()
+{
+	QString fileName = FileUtil::getSaveFileName(this, tr("Export bookmarks"), "bookmarks.txt");
+	if(fileName.isEmpty())
+		return;
+
+	QFile file(fileName);
+	if(file.open(QIODevice::WriteOnly | QIODevice::Truncate | QIODevice::Text)) {
+		QDomDocument doc;
+		QDomElement root = doc.createElement("bookmarks");
+		doc.appendChild(root);
+		for (int row = 0; row < model_->rowCount(); ++row) {
+			QModelIndex index = model_->index(row, 0, QModelIndex());
+			ConferenceBookmark cb = bookmarkFor(index);
+			root.appendChild(cb.toXml(doc));
+		}
+		file.write(doc.toString().toLocal8Bit());
+	}
+}
--- a/src/bookmarkmanagedlg.h
+++ b/src/bookmarkmanagedlg.h
@@ -68,6 +68,8 @@ private slots:
 	void joinCurrentRoom();
 	void closeEditor(QWidget* editor, QAbstractItemDelegate::EndEditHint hint);
 	void selectionChanged(const QItemSelection& selected, const QItemSelection& deselected);
+	void importBookmarks();
+	void exportBookmarks();
 
 private:
 	Ui::BookmarkManage ui_;
